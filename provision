#!/usr/bin/env bash
# Provisioning script

# Set errexit option to exit immediately on any non-zero status return
set -e

echo -e "\n\033[38;5;255m\033[48;5;234m\033[1m  S P A C E  E L E V A T O R  \033[0m\n"

# This is where Ansible looks for local modules. Disable it, in the
# interests of consistency between installs.
export ANSIBLE_LIBRARY=

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd -P)"

DEFAULT_SITE_VARS="$SCRIPT_DIR/global_vars/default-site.yml"
GLOBAL_VARS="$SCRIPT_DIR/global_vars/globals.yml"
HOME_DIR="$HOME/.space-elevator"
SITE_VARS="$HOME_DIR/site.yml"

# Include the check_ansible function from ansible_check.sh
source util/ansible_check.sh

function init_homedir() {
  if [ ! -d "$HOME_DIR" ]; then
    mkdir "$HOME_DIR"
    echo "Created new Space Elevator home directory: $HOME_DIR"
  fi
  if [ ! -f "$SITE_VARS" ]; then
    cp "$DEFAULT_SITE_VARS" "$SITE_VARS"
    echo "Created new Space Elevator site vars file: $SITE_VARS"
  fi
}

# check_python checks whether the 'python' interpreter is Python 2 or Python 3.
# If it is Python 2 then the inventory file is updated to set the
# ansible_interpretter host var explicitly
function check_python() {
  local PYTHON_VERSION
  PYTHON_VERSION="$(python --version 2>/dev/null)"

  if [[ -n $PYTHON_VERSION && ! $PYTHON_VERSION =~ ^Python\ 2\..* ]]; then
    local INVENTORY_DIR="$SCRIPT_DIR/inventories/"
    for INV_FILE in "$INVENTORY_DIR"/*; do
      sed 's/=python$/=python2.7/' "$INV_FILE" > "$INV_FILE.new"
      mv "$INV_FILE.new" "$INV_FILE"
      git -C "$INVENTORY_DIR" update-index --assume-unchanged "$INV_FILE" 2>/dev/null || true
    done
  fi
}

# run_genesis invokes the genesis playbook file specified by the first argument
# to the function
function run_genesis() {
  local GENESIS_PLAYBOOK=$1
  local ASK_BECOME=""
  
  if [ -n "${SSH_USER}" ] && [ "$SSH_USER" != "root" ]; then
    ASK_BECOME="--ask-become-pass"
  fi
  
  # Run the specified genesis playbook with the specified Ansible inventory
  echo; echo; ansible-playbook -vv \
    -i inventories/inventory \
    --extra-vars="@$GLOBAL_VARS" \
    --extra-vars="@$DEFAULT_SITE_VARS" \
    --extra-vars="@$SITE_VARS" \
    $ASK_BECOME \
    "playbooks/$GENESIS_PLAYBOOK"
}

init_homedir
check_python
check_ansible

# Figure out which genesis role to invoke
read -r -p "Which provider are you using?
  1. Amazon
  2. Azure
  3. DigitalOcean
  4. Google
  5. Linode
  6. Rackspace
: " reply

case "$reply" in
  1) run_genesis amazon.yml;;
  2) run_genesis azure.yml;;
  3) run_genesis digitalocean.yml;;
  4) run_genesis google.yml;;
  5) run_genesis linode.yml;;
  6) run_genesis rackspace.yml;;
  *) echo; echo "Invalid provider selected."; exit 1;;
esac
